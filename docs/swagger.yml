openapi: 3.0.0
info:
  title: Social Media API
  version: 1.0.0
  description: API for user management, authentication, and posts.
servers:
  - url: http://localhost:3000/auth
    description: Authentication API
  - url: http://localhost:3001/users
    description: User management API
  - url: https://localhost:3002/posts
    description: Post management API

paths:
  /auth/login:
    post:
      summary: Log in
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful authentication
        '401':
          description: Invalid credentials

  /users:
    get:
      tags:
        - Users
      summary: Get user list
      responses:
        '200':
          description: User list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user profile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

  /user/profile:
    get:
      tags:
        - Users
      summary: Get own profile
      responses:
        '200':
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /posts:
    get:
      tags:
        - Posts
      summary: Get posts
      parameters:
        - name: user_id
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Post list
    post:
      tags:
        - Posts
      summary: Create a post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostForm'
      responses:
        '201':
          description: Post created successfully

  /posts/{id}:
    parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
    get:
      tags:
        - Posts
      summary: Get post
      responses:
        '200':
          description: Post retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Post not found

    patch:
      tags:
        - Posts
      summary: Update a post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostForm'
      responses:
        '200':
          description: Post updated successfully
        '404':
          description: Post not found

    delete:
      tags:
        - Posts
      summary: Delete a post
      responses:
        '200':
          description: Post deleted successfully
        '404':
          description: Post not found

  /posts/{id}/like:
    parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
    post:
      tags:
        - Posts
      summary: Like a post
      responses:
        '200':
          description: Like added successfully

  /feed:
    get:
      tags:
        - Posts
      summary: Get feed
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Feed retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        biography:
          type: string
        createdAt:
          type: string
          format: date

    PostForm:
      type: object
      properties:
        content:
          type: string

    Post:
      type: object
      properties:
        id:
          type: integer
        creator:
          $ref: '#/components/schemas/User'
        content:
          type: string
        likes:
          type: integer
        createdAt:
          type: string
          format: date